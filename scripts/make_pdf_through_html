#!/bin/bash
# Builds a PDF out of a Markdown file.
# We do that with Pandoc.
#
# This is part of the [MoVeDo](https://github.com/movedo) project.
# See LICENSE.md for copyright information.

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
. "${script_dir}/_common.sh"

#h2p_tool=wkhtmltopdf
h2p_tool=weasyprint

_check_tool pandoc       # for Markdown ot HTML conversion
_check_tool $h2p_tool        # for HTML to PDF conversion
if [ "$h2p_tool" = "wkhtmltopdf" ] && $tool -h | grep "Reduced Functionality"
then
	_error "The version of 'wkhtmltopdf' found in the PATH does not support links in PDFs (among other things). Please install the static version instead."
fi
_check_env

# parameters
args="$@"
single_html="$pdf_dir/doc.html"
debug=false
individual=false
version_as_subtitle=false

if [ "${DEBUG:-}" != "" ] || _contains_word "--debug" "$args"
then
	debug=true
	args="${args//--debug/}"
fi
if [ "${INDIVIDUAL_PDFS:-}" != "" ] || _contains_word "--individual" "$args"
then
	individual=true
	args="${args//--individual/}"
fi
if [ "${VERSION_AS_SUBTITLE:-}" != "" ] || _contains_word "--version-as-subtitle" "$args"
then
	version_as_subtitle=true
	args="${args//--version-as-subtitle/}"
fi
export args

cd "$gen_src_dir"

echo
echo "Generating combined HTML (Pandoc) ..."
mkdir -p "$pdf_dir"

pandoc_extra=()
pandoc_extra+=(--metadata=date:"`date -u '+%Y-%m-%d'`")
doc_version="$(_fetch_version)"
pandoc_extra+=(--metadata=version:"$doc_version")
if $version_as_subtitle
then
	pandoc_extra+=(--metadata=subtitle:$doc_version)
fi
export pandoc_extra

wkhtmltopdf_extra=()
wkhtmltopdf_extra+=(--page-size A4)
wkhtmltopdf_extra+=(--margin-bottom 20mm)
wkhtmltopdf_extra+=(--margin-top 20mm)
wkhtmltopdf_extra+=(--minimum-font-size 16)
export wkhtmltopdf_extra

weasyprint_extra=()
weasyprint_extra+=(--media-type=screen)
weasyprint_extra+=("--base-url=$gen_src_dir")
export weasyprint_extra

export templates_dir
export h2p_tool

function generateHtml() {

	file_md="$1"
	file_html="$2"

	pandoc \
		--from=markdown \
		--to=html \
		--standalone \
		--atx-headers \
		--table-of-contents \
		--output="$file_html" \
		--css="$templates_dir/pandoc-github.css" \
		"${pandoc_extra[@]}" \
		$args \
		"$file_md"
}

function generatePdf() {

	file_html="$1"
	file_pdf="$2"

	if [ "$h2p_tool" = "wkhtmltopdf" ]
	then
		$h2p_tool \
			${wkhtmltopdf_extra[*]} \
			"$file_html" \
			"$file_pdf"
	else
		if true
		then
			$h2p_tool \
				${weasyprint_extra[*]} \
				"$file_html" \
				"$file_pdf"
		else
			pandoc \
				--from=markdown \
				--to=html5 \
				--pdf-engine=weasyprint \
				--pdf-engine-opt=--presentational-hints \
				--pdf-engine-opt=--media-type=screen \
				--metadata link-citations=true \
				--webtex=https://latex.codecogs.com/svg.latex? \
				--css="$templates_dir/pandoc-github.css" \
				--output="$file_pdf" \
				"$file_md"
		fi
		echo "PDF file generated: '$file_pdf'"
		echo
	fi
}

function generateHtmlAndPdf() {

	file_md="$1"
	file_html="$2"
	file_pdf="$3"

	mkdir -p "$(dirname "$file_html")"
	generateHtml "$file_md" "$file_html"

	mkdir -p "$(dirname "$file_pdf")"
	generatePdf "$file_html" "$file_pdf"

	if $debug
	then
		echo "DEBUG: Created intermediary file '$file_html'"
	else
		rm "$file_html"
	fi
}

echo
echo "Generating combined PDF ($h2p_tool) ..."

generateHtmlAndPdf "$single_md" "$single_html" "$single_pdf"

if $individual
then
	echo
	echo "Generating individual HTML and PDFs (Pandoc & $h2p_tool) ..."

	for file_md in $(cat "$index_md_file")
	do
		file_html="$pdf_dir/$(echo "$file_md" | sed -e 's/[.]md$/.html/')"
		file_pdf="$pdf_dir/$(echo "$file_md" | sed -e 's/[.]md$/.pdf/')"
		generateHtmlAndPdf "$file_md" "$file_html" "$file_pdf"
	done
fi
