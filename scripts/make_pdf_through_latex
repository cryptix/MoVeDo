#!/bin/bash
# Builds a PDF out of a Markdown file.
# We do that with Pandoc.
#
# This is part of the [MoVeDo](https://github.com/movedo) project.
# See LICENSE.md for copyright information.

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
. "${script_dir}/_common.sh"

tools=""
tools="$tools pandoc" # for PDF generation
_check_tools $tools
_check_env

# parameters
args="$@"
h1_page_breaks=true
debug=false
individual=false

if _contains_word "--no-h1-page-breaks" "$args"
then
	h1_page_breaks=false
	args="${args//--no-h1-page-breaks/}"
fi
if [ "${INDIVIDUAL_PDFS:-}" != "" ] || _contains_word "--individual" "$args"
then
	individual=true
	args="${args//--individual/}"
fi
if [ "${DEBUG:-}" != "" ] || _contains_word "--debug" "$args"
then
	debug=true
	args="${args//--debug/}"
fi

cd "$gen_src_dir"

echo
echo "Generating combined PDF (through Latex with Pandoc) ..."
mkdir -p "$pdf_dir"

pandoc_extra=()
pandoc_extra+=(--metadata=date:"`date -u '+%Y-%m-%d'`")
pandoc_extra+=(--lua-filter="$filters_dir/lua-filters/scholarly-metadata/scholarly-metadata.lua")
pandoc_extra+=(--lua-filter="$filters_dir/lua-filters/author-info-blocks/author-info-blocks.lua")

if [ -e "$biblography_file" ]
then
	pandoc_extra+=("--bibliography=$biblography_file")
	pandoc_extra+=("--filter=pandoc-citeproc")
fi

if $h1_page_breaks
then
	# with this. Latex adds a page-break before every level 1 header
	pandoc_extra+=("--variable=documentclass:report")
fi

function pandoc_convert2pdf() {

	file_md="$1"
	file_out="$2" # this is either .tex or .pdf

	# Convert from Markdown to LaTex or PDF
	pandoc \
		--from=markdown \
		--to=latex \
		--standalone \
		--atx-headers \
		--table-of-contents \
		--output="$file_out" \
		"${pandoc_extra[@]}" \
		$args \
		"$file_md"

	if $debug && echo "$file_out" | grep -q '.pdf$'
	then
		file_tex="$(echo "$file_out" | sed -e 's/[.]pdf$/.tex/')"
		echo "DEBUG: Creating intermediary file '$file_tex' ..."
		# Convert from Markdown to LaTex
		pandoc_convert2pdf "$file_md" "$file_tex"
	fi
}

pandoc_convert2pdf "$single_md" "$single_pdf"

if $individual
then
	echo
	echo "Generating individual PDFs (through Latex with Pandoc) ..."

	for file_md in $(cat "$index_md_file")
	do
		file_pdf="$pdf_dir/$(echo "$file_md" | sed -e 's/[.]md$/.pdf/')"
		mkdir -p "$(dirname "$file_pdf")"
		pandoc_convert2pdf "$file_md" "$file_pdf"
		echo "PDF file generated: '$file_pdf'"
		echo
	done
fi

